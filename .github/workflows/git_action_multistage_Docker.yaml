name: Build Multistage Docker, Update Repo Version, and Push to Docker Hub

on:
  push:
    branches:
      - task4

jobs:
  Build_Docker:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.VERSION }}
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Extract Version from gradle.properties
      id: extract_version
      run: |
        VERSION=$(grep "^project.version=" gradle.properties | sed -E 's/project.version=//')
        echo "Extracted version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "::set-output name=VERSION::$VERSION"

    - name: Build Docker Image
      run: |
        REPO_NAME=${{ github.event.repository.name }}
        docker build --build-arg REPO_NAME=${REPO_NAME} -t ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${{ env.VERSION }} .

    - name: Save Docker Image
      run: |
        docker save -o image.tar ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.VERSION }}

    - name: Upload Docker Image as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-image
        path: image.tar

  update_version_local_repo:
    runs-on: ubuntu-latest
    needs: Build_Docker
    outputs:
      NEW_VERSION: ${{ steps.increment_version.outputs.NEW_VERSION }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Increment Version in gradle.properties
      id: increment_version
      run: |
        VERSION=$(grep "^project.version=" gradle.properties | sed -E 's/project.version=//')
        IFS='.' read -r major minor patch <<< "$VERSION"
        patch=$((patch + 1))
        NEW_VERSION="$major.$minor.$patch"
        echo "New version: $NEW_VERSION"
        sed -i "s/^project.version=.*/project.version=$NEW_VERSION/" gradle.properties  
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        echo "::set-output name=NEW_VERSION::$NEW_VERSION"

    - name: Commit and Push Version Update
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        git config --global user.name "avichai"
        git config --global user.email "avichai321@git.com"
        git add gradle.properties
        git commit -m "Auto-incremented version to $NEW_VERSION" || echo "No changes to commit"
        git push https://x-access-token:${GIT_TOKEN}@github.com/${{ github.repository }}.git task4 || echo "No changes to push"

  Push_Docker_to_Docker_HUB:
    runs-on: ubuntu-latest
    needs: update_version_local_repo

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Download Docker Image Artifact
      uses: actions/download-artifact@v4
      with:
        name: docker-image
        path: .

    - name: Load Docker Image
      run: |
        docker load -i image.tar

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Tag and Push Docker Image
      run: |
        REPO_NAME=${{ github.event.repository.name }}
        NEW_VERSION=${{ needs.update_version_local_repo.outputs.NEW_VERSION }}
        docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${NEW_VERSION} ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${NEW_VERSION}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${NEW_VERSION}
        docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${NEW_VERSION} ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
