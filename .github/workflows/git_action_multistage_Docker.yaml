name: Task4 Build Gradle app with Multistage Docker

on:
  workflow_dispatch:
  push:
    branches:
      - task4

jobs:
  Update_Version:
    runs-on: ubuntu-latest

    outputs:
      new_version: ${{ steps.new-version.outputs.new_version }}"

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Extract current version
      id: get-version
      run: |
        CURRENT_VERSION=$(grep -oP "version\s*=\s*\"\K[^\"]*" build.gradle.kts)
        echo "Current version: $CURRENT_VERSION"
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Split version into components
        IFS='.' read -r -a VERSION_PARTS <<< "$CURRENT_VERSION"
        MAJOR=${VERSION_PARTS[0]}
        MINOR=${VERSION_PARTS[1]}
        PATCH=${VERSION_PARTS[2]}
        
        echo "major=$MAJOR" >> $GITHUB_OUTPUT
        echo "minor=$MINOR" >> $GITHUB_OUTPUT
        echo "patch=$PATCH" >> $GITHUB_OUTPUT

    - name: Calculate new version
      id: new-version
      run: |
        CURRENT_VERSION=$(grep -oP "version\s*=\s*\"\K[^\"]*" build.gradle.kts)
        MAJOR=${{ steps.get-version.outputs.major }}
        MINOR=${{ steps.get-version.outputs.minor }}
        PATCH=${{ steps.get-version.outputs.patch }}
        PATCH=$((PATCH + 1))
        NEW_VERSION="$MAJOR.$MINOR.$PATCH"
        echo "New version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        sed -i 's/version = "[^"]"/version = "'${NEW_VERSION}'"/' build.gradle.kts

    - name: Commit and push changes
      run: |
        git config --local user.email "avichai321@github.com"
        git config --local user.name "avichai"
        git add build.gradle.kts
        git commit -m "Bump version to ${{ steps.new-version.outputs.new_version }}"
        git push  


  build-and-deploy:
    needs: Update_Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: task4
      - name: Build Docker Image with Updated Version
        run: |
          REPO_NAME=${{ github.event.repository.name }}
          NEW_VERSION=$(grep -oP "version\s*=\s*\"\K[^\"]*" build.gradle.kts)
          docker build --build-arg REPO_NAME=${REPO_NAME} -t ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${NEW_VERSION} .
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      
      
      - name: Build and push Docker image to docker hub
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.Update_Version.outputs.new_version }}
          
      
      - name: Pull updated image from Docker hub and run
        run: |
           docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.Update_Version.outputs.new_version}}
           docker run --rm ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ needs.Update_Version.outputs.new_version }}
    