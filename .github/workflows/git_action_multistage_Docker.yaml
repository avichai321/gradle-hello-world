name: Build Docker, Update Version, and Push to Docker Hub

on:
  push:
    branches:
      - task4

jobs:
  update_version_local_repo:
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{ steps.increment_version.outputs.NEW_VERSION }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Increment Version in build.gradle.kts
      id: increment_version
      run: |
        VERSION=$(grep -oP 'version\s*=\s*"\K[^"]*' build.gradle.kts)
        echo "Current version: $VERSION"
        IFS='.' read -r major minor patch <<< "$VERSION"
        patch=$((patch + 1))
        NEW_VERSION="$major.$minor.$patch"
        sed -i "s/version = \"$VERSION\"/version = \"$NEW_VERSION\"/" build.gradle.kts
        echo "New version: $NEW_VERSION"
        echo "NEW_VERSION=$NEW_VERSION" >> "$GITHUB_ENV"
        echo "NEW_VERSION=$NEW_VERSION" >> "$GITHUB_OUTPUT"

    - name: Commit and Push Version Update
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        git config --global user.name "avichai"
        git config --global user.email "avichai321@git.com"
        git add build.gradle.kts
        git commit -m "Auto-incremented version to $NEW_VERSION" || echo "No changes to commit"
        git push https://x-access-token:${GIT_TOKEN}@github.com/${{ github.repository }}.git task4 || echo "No changes to push"

  Build_Docker_Push_Download_and_run:
    runs-on: ubuntu-latest
    needs: update_version_local_repo

    steps:
    - name: Checkout Repository (Updated Version)
      uses: actions/checkout@v3

    - name: Fetch Updated Version
      id: extract_version
      run: |
        VERSION=$(grep -oP 'version\s*=\s*"\K[^"]*' build.gradle.kts)
        IFS='.' read -r major minor patch <<< "$VERSION"
        patch=$((patch + 1))
        IMAGE_TAG="$major.$minor.$patch"
        echo "Updated tag: $IMAGE_TAG"
        echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"
        echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_OUTPUT"

    - name: Build Docker Image with Updated Version
      id: build
      run: |
        REPO_NAME=${{ github.event.repository.name }}
        docker build --build-arg REPO_NAME=${REPO_NAME} -t ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${IMAGE_TAG} .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Tag and Push Docker Image with Updated Version
      run: |
        REPO_NAME=${{ github.event.repository.name }}
        docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${IMAGE_TAG} ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${IMAGE_TAG}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
