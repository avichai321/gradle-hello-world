name: Build gradle-hello-world-multistage-docker APP

on:
  push:
    branches: 
      - task4
  workflow_dispatch:
  

jobs:
  Task_change_code_and_change_ver_two:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Update Hello World to Hello World Avicii
      run: |
        FILE_PATH="src/main/java/com/ido/HelloWorld.java"
        SEARCH_STRING="System.out.println(\"Hello World!\");"
        REPLACE_STRING="System.out.println(\"Hello World Avicii!\");"

        if [ ! -f "$FILE_PATH" ]; then
          echo "Error: File $FILE_PATH does not exist"
          exit 1
        fi

        sed -i "s/$SEARCH_STRING/$REPLACE_STRING/g" "$FILE_PATH"

    #- name: Use Gradle wrapper and Build the program
     # run: |
      #  chmod +x ./gradlew
       # ./gradlew build

    - name: Extract version from gradle.properties
      run: |
        VERSION=$(grep "version =" build.gradle.kts | sed -E 's/.*version = "([^"]+)".*/\1/')
        echo "Extracted version: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Commit and Push Version Update
      env:
        GH_Token: ${{ secrets.GIT_TOKEN }}
      run: |
        git config --global user.name "avichai321"
        git config --global user.email "avichai321@git.com"
        git add gradle.properties
        git commit -m "Auto-incremented version to $VERSION" || echo "No changes to commit"
        # Use PAT for authentication
        git push https://x-access-token:${GH_Token}@github.com/${{ github.repository }}.git task4 || echo "No changes to push"

    - name: Build Docker image with Multistage Docker
      run: |
        docker build --build-arg REPO_NAME=${{ github.event.repository.name }} -t ${{ github.event.repository.name }}:${{ env.VERSION }} .

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push Docker image
      run: |
        REPO_NAME=${{ github.event.repository.name }}

        docker build --build-arg REPO_NAME=${REPO_NAME} -t ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${{ env.VERSION }} .
        docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${{ env.VERSION }} ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest

        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${{ env.VERSION }}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
