name: Task 3 Build gradle-hello-world docker with gradel

on:
  push:
    branches: 
    - task3-test-with-use-gradle-only

jobs:
  build_program_and_docker_with_gradle:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK for the APP
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Use Gradle wrapper as executable and Build the Program with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew clean build --info

    - name: Check jar file version and docker after build
      run: |
        cd build/libs
        ls -l 
        docker images -a 
    
    - name: Fetch Updated Version after build
      id: extract_new_version
      run: |
        VERSION=$(grep "^project.version=" gradle.properties | sed -E 's/project.version=//')
        IFS='.' read -r major minor patch <<< "$VERSION"
        patch=$((patch + 1)) # Ensure Docker gets the incremented version
        IMAGE_TAG="$major.$minor.$patch"
        echo "IMAGE_TAG=$IMAGE_TAG" >> "$GITHUB_ENV"

    - name: Commit and Push Version Update
      env:
        GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
      run: |
        git config --global user.name "avichai"
        git config --global user.email "avichai321@git.com"
        git add gradle.properties
        git commit -m "Auto-incremented version to $NEW_VERSION" || echo "No changes to commit"
        git push https://x-access-token:${GIT_TOKEN}@github.com/${{ github.repository }}.git task3-test-with-use-gradle-only || echo "No changes to push"
     
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Tag and Push Docker Image with Updated Version
      run: |
        REPO_NAME=${{ github.event.repository.name }}
        docker tag ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${IMAGE_TAG} ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:${IMAGE_TAG}
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${REPO_NAME}:latest
